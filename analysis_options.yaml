# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include:
  - package:flutter_lints/flutter.yaml
  - package:bloc_lint/recommended.yaml

# Dart formatter configuration
dart_code_metrics:
  exclude:
    rules:
      - test/**
  extends:
    - recommended
  rules:
    - avoid-assignments-as-conditions
    - avoid-cascade-after-if-null
    - avoid-casting-to-extension-type
    - avoid-collection-methods-with-unrelated-types
    - avoid-commented-out-code
    - avoid-conditions-with-boolean-literals
    - avoid-double-slash-imports
    - avoid-duplicate-exports
    - avoid-duplicate-mixins
    - avoid-duplicate-named-imports
    - avoid-duplicate-test-assertions
    - avoid-dynamic
    - avoid-empty-spread
    - avoid-generics-shadowing
    - avoid-global-state
    - avoid-late-keyword
    - avoid-missed-calls
    - avoid-misused-set-literals
    - avoid-non-null-assertion
    - avoid-nullable-tostring
    - avoid-passing-async-when-sync-expected
    - avoid-passing-self-as-argument
    - avoid-redundant-async
    - avoid-self-assignment
    - avoid-self-compare
    - avoid-substring
    - avoid-throw-in-catch-block
    - avoid-top-level-members-in-tests
    - avoid-unnecessary-type-assertions
    - avoid-unnecessary-type-casts
    - avoid-unrelated-type-assertions
    - avoid-unused-parameters
    - missing-test-assertion
    - no-empty-block
    - no-equal-then-else
    - no-magic-number
    - prefer-commenting-analyzer-ignores
    - prefer-correct-test-file-name
    - prefer-iterable-of
    - prefer-match-file-name
    - prefer-moving-to-variable

dcm:
  exclude:
    rules:
      - test/**

linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at https://dart.dev/lints.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.
  rules:
    # prefer_single_quotes: true  # Uncomment to enable the `prefer_single_quotes` rule
    lines_longer_than_80_chars: false  # Disable 80-char limit since we use 120
    prefer_const_constructors: true
    prefer_const_literals_to_create_immutables: true
    prefer_const_declarations: true

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options

formatter:
  trailing_commas: preserve
