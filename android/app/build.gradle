plugins {
    id "com.android.application"
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    // END: FlutterFire Configuration
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

dependencies {
    implementation platform('com.google.firebase:firebase-bom:33.16.0')
    implementation 'com.google.android.play:app-update:2.1.0'
    implementation 'com.google.android.play:app-update-ktx:2.1.0'
}

android {
    namespace = "sk.anickaapavol.organista"
    compileSdk = Math.max(35, flutter.compileSdkVersion)
    // After updating Flutter to 3.32.5, the ndkVersion is not set correctly, needs to be set manually
    // ndkVersion = flutter.ndkVersion
    ndkVersion = "27.0.12077973"

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId = "sk.anickaapavol.organista"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = 23
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
        manifestPlaceholders = [
            'enableDeferredComponents': 'false',
            'applicationName': 'io.flutter.app.FlutterApplication'
        ]
        
        // Enable native debug symbols
        ndk {
            debugSymbolLevel 'FULL'
        }
    }

    signingConfigs {
        release {
            def keystorePath = System.getenv("ANDROID_KEYSTORE_FILE")
            if (keystorePath != null) {
                storeFile file(keystorePath)
            }
            storePassword System.getenv("ANDROID_KEYSTORE_PASSWORD")
            keyAlias System.getenv("ANDROID_KEY_ALIAS")
            keyPassword System.getenv("ANDROID_KEY_PASSWORD")
        }
    }

    buildTypes {
        release {
            // Signing with the release keys
            signingConfig signingConfigs.release
            // Enables code shrinking, obfuscation, and optimization
            minifyEnabled true
            // Enables resource shrinking
            shrinkResources true
            // Specifies the ProGuard rules file
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            
            // Enable native debug symbols for release builds
            ndk {
                debugSymbolLevel 'FULL'
            }
        }
    }
}

flutter {
    source = "../.."
}
